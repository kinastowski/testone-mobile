type DraftTask @model @auth(rules: [{ allow: private }]) {
  id: ID!
  title: String
  description: String
  details: AWSJSON
  image: String
  constraints: AWSJSON
  stats: AWSJSON
  type: Int
  owner: String
  reward: Int
  other: AWSJSON
  max: Int
}

type Task @model @auth(rules: [{ allow: private }]) {
  id: ID!
  title: String
  description: String
  details: AWSJSON
  image: String
  constraints: AWSJSON
  stats: AWSJSON
  type: Int
  owner: String
  reward: Int
  other: AWSJSON
  end: AWSDateTime
}

type UserTask
  @model
  @auth(
    rules: [
      { allow: private, operations: [create] }
      { allow: owner }
      { allow: public, operations: [update, delete, read] }
    ]
  ) {
  id: ID!
  result: AWSJSON
  stats: AWSJSON
  comment: String
  taskId: String
  rec: String
}

type User @model @auth(rules: [{ allow: private }, { allow: owner }]) {
  id: ID!
  profile: AWSJSON
  tasks: AWSJSON
  userTasks: AWSJSON
}

type Query {
  getCompany(id: String): AWSJSON
    @function(name: "testzone-staging-getCompanyPy")
    @aws_api_key
}
